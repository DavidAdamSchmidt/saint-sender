<Window x:Class="SaintSender.DesktopUI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:SaintSender.DesktopUI.ViewModels"
        xmlns:conv="clr-namespace:SaintSender.DesktopUI.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="Main Window - SaintSender"
        Height="600" Width="860" MinHeight="300" MinWidth="800"
        WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <vm:MainWindowModel />
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <conv:BooleanToFontWeightConverter x:Key="BoolToFont" />
        <Style TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="75" />
        </Style>
        <Style TargetType="{x:Type fa:ImageAwesome}">
            <Setter Property="Icon" Value="Spinner" />
            <Setter Property="Spin" Value="True" />
            <Setter Property="Height" Value="48" />
            <Setter Property="Width" Value="48" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0,0,15,0"></Setter>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="50" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75" />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition Width="75" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="75" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Button Command="{Binding SendNewButtonClickCommand}" HorizontalAlignment="Left" >
            _Send New
        </Button>
        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal">
            <Button HorizontalAlignment="Left" Margin="20,0,15,0" Command="{Binding RefreshButtonClickCommand}">
                _Refresh
            </Button>
            <fa:ImageAwesome Visibility="{Binding IsLoadingEmails, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
        <Label Grid.Column="2" Grid.Row="0" Content="{Binding EmailAddress}"
               Width="Auto" FontWeight="Bold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" />
        <Button Grid.Column="3" Grid.Row="0" x:Name="Logout" HorizontalAlignment="Right"
                Command="{Binding LogoutButtonClickCommand}" CommandParameter="{Binding ElementName=Logout}">
            _Logout
        </Button>
        <ListBox x:Name="Mails" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1"
                 ItemsSource="{Binding Emails}" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding ReadDoubleClickedEmail}"
                                           CommandParameter="{Binding ElementName=Mails, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="Item">
                        <TextBlock Text="{Binding Path=Subject}"
                                   FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}" />
                        <TextBlock Text="{Binding Path=FirstSender}"
                                   FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}" />
                        <TextBlock Text="{Binding Path=Date}"
                                   FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
