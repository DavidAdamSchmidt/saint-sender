<Window x:Class="SaintSender.DesktopUI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SaintSender.DesktopUI.Views"
        xmlns:vm="clr-namespace:SaintSender.DesktopUI.ViewModels"
        xmlns:conv="clr-namespace:SaintSender.DesktopUI.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="MainWindow" ResizeMode="NoResize" >
    <Window.DataContext>
        <vm:MainWindowModel />
    </Window.DataContext>
    <Window.Resources>
        <conv:BooleanToFontWeightConverter x:Key="BoolToFont"/>
        <Style TargetType="local:MainWindow">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="600"/>
            <Setter Property="Width" Value="800" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="75" />
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,40,135,0"/>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ExitProgramCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Label Content="{Binding UserEmail}" Margin="0,56,145,0"/>
        <Button x:Name="Logout" Command="{Binding LogoutButtonClickCommand}" CommandParameter="{Binding ElementName=Logout}" Margin="657,40,35,474">
            _Log Out
        </Button>
        <Button Command="{Binding SendNewButtonClickCommand}" Margin="36,37,651,477">
            _Send New
        </Button>
        <ListBox x:Name="Mails" ItemsSource="{Binding Emails}" Height="362" Margin="39,120,35,52" Width="699">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding ReadDoubleClickedEmail}" CommandParameter="{Binding ElementName=Mails, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="Item">
                        <TextBlock Text="{Binding Path=Subject}" FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}"/>
                        <TextBlock Text="{Binding Path=Sender.DisplayName}" FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}"/>
                        <TextBlock Text="{Binding Path=Date}" FontWeight="{Binding IsRead, Converter={StaticResource BoolToFont}}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="Previous" Margin="239,482,460,32">
            _Previous
        </Button>
        <Button x:Name="Next" Margin="457,482,242,32">
            _Next
        </Button>
    </Grid>
</Window>
