<Window x:Class="SaintSender.DesktopUI.Views.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SaintSender.DesktopUI"
        xmlns:conv="clr-namespace:SaintSender.DesktopUI.Converters"
        xmlns:vm="clr-namespace:SaintSender.DesktopUI.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Title="Login - SaintSender"
        Height="320" Width="320" MinHeight="300" MinWidth="200" MaxHeight="400" MaxWidth="600"
        WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <vm:LoginWindowModel />
    </Window.DataContext>
    <Window.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <conv:IntegerToBooleanConverter x:Key="IntegerToBooleanConverter" /> 
        <Style TargetType="{x:Type WrapPanel}">
            <Setter Property="Margin" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Width" Value="70" />
        </Style>
        <Style x:Key="Input" TargetType="{x:Type Control}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Width" Value="140" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Margin" Value="12,10" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding SignInButtonClickCommand}"
                    CommandParameter="{Binding ElementName=PwBxPassword}" Key="Enter" />
    </Window.InputBindings>
    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
        <WrapPanel>
            <Label Target="{Binding ElementName=TxtBxEmail}">_Email:</Label>
            <TextBox x:Name="TxtBxEmail" Style="{StaticResource Input}"
                     Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"/>
            <ComboBox IsEnabled="{Binding EmailAddresses.Count, Converter={StaticResource IntegerToBooleanConverter}}" x:Name="ChooseUser" Height="24" Width="18" IsTabStop="False"
                      ItemsSource="{Binding EmailAddresses}" SelectedItem="{Binding SelectedUser, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding WindowLoadedCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="DropDownOpened">
                        <i:InvokeCommandAction Command="{Binding DropDownOpenedCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction
                            Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding ElementName=PwBxPassword}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </WrapPanel>
        <WrapPanel>
            <Label Target="{Binding ElementName=PwBxPassword}">_Password:</Label>
            <PasswordBox x:Name="PwBxPassword" Style="{StaticResource Input}" Width="158">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PasswordChanged">
                        <i:InvokeCommandAction Command="{Binding PasswordChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </PasswordBox>
        </WrapPanel>
        <WrapPanel>
            <Button Command="{Binding SignInButtonClickCommand}" CommandParameter="{Binding ElementName=PwBxPassword}">
                _Sign in
            </Button>
            <Button Command="{Binding CancelButtonClickCommand}" CommandParameter="{Binding ElementName=PwBxPassword}">
                _Cancel
            </Button>
        </WrapPanel>
        <TextBlock Height="48" Width="48">
            <fa:ImageAwesome Icon="Spinner" Spin="True" Height="48" Width="48"
                             Visibility="{Binding IsSending, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </TextBlock>
    </StackPanel>
</Window>